/*
 * Copyright (c) 2020 ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors/mouse_move.dtsi>
#include <dt-bindings/zmk/mouse.h>

//#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
//#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#define DEF 0;
#define UPE 1;
#define MSC 2;

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC      &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                   &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &bt BT_CLR
                &kp CAPSLOCK &kp Q      &kp W      &kp E      &kp R      &kp T                    &kp Y      &kp U      &kp I      &kp O      &kp P      &kp RALT
                &kp LSHIFT   &kp A      &kp S      &kp D      &kp F      &kp G                    &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp RSHIFT
                &kp LCTRL    &kp Z      &kp X      &kp C      &kp V      &kp B                    &kp N      &kp M      &kp COMMA  &kp DOT    &kp SLASH  &kp RCTRL
                                                   &kp TAB    &kp BSPC   &kp SPACE                &kp SPACE   &kp ENTER &kp LEFT_WIN
            >;
        };
    };
};


/ {
    /* input config for mouse move mode on default layer (DEF & MSK) */
 tb0_mmv_ibl {
                /* new forked compatible name */
                compatible = "zmk,input-behavior-listener";
                
                /* the input point device alias */
                device = <&glidepoint0>;

                /* only enable in default layer (DEF) & mouse key layer (MSK) */
                layers = <DEF>;

                /* event code value to override raw input event */
                /* designed for switching to mouse scroll, xy-swap, precise-mode+, etc */
                /* NOTE: only apply input-code overriding for INPUT_EV_REL */
                evt-type = <INPUT_EV_REL>;
                x-input-code = <INPUT_REL_X>;
                y-input-code = <INPUT_REL_Y>;
                scale-multiplier = <1>;
                scale-divisor = <1>;

                /* bind a behavior to auto activate MSK layer for &mkp */
                bindings = <&ib_tog_layer MSK>;

                /* align to CCW 45 degree */
                rotate-deg = <315>;
                /* NOTE 1: This settings do not compitable with y-invert and x-invert */
                /* NOTE 2: Floating point computation requires alot of ram. */
               /*         This feature will cuase stackover flow with CONFIG_ZMK_USB_LOGGING=y */
     };
  
        /* input config for mouse scroll mode on momentary mouse scoll layer (MSC) */
   tb0_msl_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&glidepoint1;
                layers = <MSC>;
                evt-type = <INPUT_EV_REL>;
                
                /* slienting x-axis with alt event code */
                x-input-code = <INPUT_REL_MISC>;
                y-input-code = <INPUT_REL_WHEEL>;

                /* invent scrolling direction */
                y-invert;

                /* align to CCW 45 degree */
                rotate-deg = <315>;
                /* NOTE 1: This settings do not compitable with y-invert and x-invert */
                /* NOTE 2: Floating point computation requires alot of ram. */
                /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */

                /* bind a behavior to down scaling input value to (1/8) */
                /* NOTE: This behavior memorizes recent pending displacement, it is different to scale-divisor. */
                /*       The delta value is accumlated until result >= 1 after cast. */
                /*       The scrolling will be smoother and allow precise scrolling */
                bindings = <&ib_wheel_scaler 1 8>;
         };

        /* adjust cooldown waiting period for mouse key layer (MSK) after activated */
        ib_tog_layer: ib_tog_layer {
                compatible = "zmk,input-behavior-tog-layer";
                #binding-cells = <1>;
                time-to-live-ms = <1000>;
         };

        /* define a resolution down scaler only for INPUT_REL_WHEEL */
        ib_wheel_scaler: ib_wheel_scaler {
                compatible = "zmk,input-behavior-scaler";
                #binding-cells = <2>;
                evt-type = <INPUT_EV_REL>;
                input-code = <INPUT_REL_WHEEL>;
         };
         
         
 }; 

       