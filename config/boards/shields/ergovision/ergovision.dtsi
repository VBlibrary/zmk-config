#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &default_kscan;
        zmk,matrix_transform = &default_transform;
    };

    default_kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "default_kscan";
        diode-direction = "col2row";

        row-gpios = <
            &pro_micro 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
        >;

        col-gpios = <
            &pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
            &pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)
        >;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <5>;

        map = <
            RC(0,5) RC(0,4) RC(0,3) RC(0,2) RC(0,1) RC(0,0)                RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            RC(1,5) RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0)                RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
            RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)                RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)                        
                                    RC(4,2) RC(4,1) RC(4,0)                RC(4,6) RC(4,7) RC(4,8)
        >;
    };
};

&i2c0 {
    status = "okay";

    trackpad0: cirque@2a {
        compatible = "cirque,trackpad";
        reg = <0x2a>;
        /* Additional properties specific to trackpad0 if needed */
    };

    trackpad1: cirque@2b {
        compatible = "cirque,trackpad";
        reg = <0x2b>;
        /* Additional properties specific to trackpad1 if needed */
    };
};

/&input_listeners {
    /* Input behavior listener for trackpad0 */
    trackpad0_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&trackpad0>;
        layers = <DEF MSK>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
        bindings = <&ib_tog_layer MSK>;
        rotate-deg = <315>;
    };

    /* Input behavior listener for trackpad1 */
    trackpad1_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&trackpad1>;
        layers = <DEF MSK>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
        bindings = <&ib_tog_layer MSK>;
        rotate-deg = <315>;
    };

    /* Input behavior listener for mouse scroll mode */
    trackpad_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&trackpad0>;  /* Use the appropriate trackpad device */
        layers = <MSC>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        rotate-deg = <315>;
        bindings = <&ib_wheel_scaler 1 8>;
    };
};



